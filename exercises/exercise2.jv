// Stadt Neuss: Baumpflanzungen 2023
pipeline TreeDataPipeline{
    
    //The general structure of a pipeline
    TreesExtractor
        -> TreesTextFileInterpreter
        -> TreesCSVInterpreter
        -> TreesColumnDeleter
        -> TreesTableInterpreter
        -> TreesLoader;

    // Extract files from the url
    block TreesExtractor oftype HttpExtractor {
        url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/stadt-neuss-herbstpflanzung-2023/exports/csv";
    }

    // Decode the input file content into text format
    block TreesTextFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
        lineBreak: /\r?\n/;
    }

    //Parse the input text file into a structured data table in CSV format
    block TreesCSVInterpreter oftype CSVInterpreter {
        delimiter : ";";
        enclosing: "";
        enclosingEscape : "";
    }

    //Choose columns we need to keep
    block TreesColumnDeleter oftype ColumnDeleter {
        delete: [column E];
    }

    //Parse the table Sheet into tabular data with column types and header information
    block TreesTableInterpreter oftype TableInterpreter {
        header: true;
        columns : [
            "lfd_nr" oftype integer,
            "stadtteil" oftype VogelsangStadtteil, // Use a custom type with constraints
            "standort" oftype text,
            "baumart_botanisch" oftype text,
            "baumart_deutsch" oftype text,
            "id" oftype GeoCoordinate, // Use a custom type with constraints
            "baumfamilie" oftype text,
        ];
    }

    block TreesLoader oftype SQLiteLoader {
        table: "trees";
        file: "./trees.sqlite";
        dropTable: true;
    }

}

// Define custom types
valuetype VogelsangStadtteil oftype text {
    constraints: [Vogelsang];
}

constraint Vogelsang on text: value matches /^Vogelsang.*/;

valuetype GeoCoordinate oftype text {
    constraints: [Coordinate];
}

constraint Coordinate on text: value matches /^(\d{1,3}\.\d+),\s*(\d{1,3}\.\d+)$/;